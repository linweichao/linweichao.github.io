<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>林伟超</title>
    <link>http://example.org/</link>
    <description>Recent content on 林伟超</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 May 2020 21:07:22 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka介绍</title>
      <link>http://example.org/post/kafka/kafka%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 13 May 2020 21:07:22 +0800</pubDate>
      
      <guid>http://example.org/post/kafka/kafka%E4%BB%8B%E7%BB%8D/</guid>
      <description>内容来源于官方文档 Apache kafka® 是一个分布式流平台。 这是什么意思呢？ 一个流平台有三个关键的功能： 发布和订阅记录流（streams of recor</description>
    </item>
    
    <item>
      <title>关于mybatis Spring Boot 外部属性的配置</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8Emybatis-spring-boot-%E5%A4%96%E9%83%A8%E5%B1%9E%E6%80%A7%E7%9A%84%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 03 May 2020 17:38:12 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8Emybatis-spring-boot-%E5%A4%96%E9%83%A8%E5%B1%9E%E6%80%A7%E7%9A%84%E9%85%8D%E7%BD%AE/</guid>
      <description>1 2 3 4 mybatis:configuration-properties:#这里必须是string,如果不是string就是nullflus</description>
    </item>
    
    <item>
      <title>关于spring Boot Yml配置和properties配置覆盖问题</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8Espring-boot-yml%E9%85%8D%E7%BD%AE%E5%92%8Cproperties%E9%85%8D%E7%BD%AE%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 03 May 2020 17:36:41 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%85%B3%E4%BA%8Espring-boot-yml%E9%85%8D%E7%BD%AE%E5%92%8Cproperties%E9%85%8D%E7%BD%AE%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98/</guid>
      <description>application.yml 配置如下 1 2 3 4 5 spring:kafka:bootstrap-servers:- 10.1.1.2:9092- 10.1.1.3:9092 在测试时提供如下配置： 1 spring.kafka.bootstrap-servers=localhost:9092 或者设置系统属性 1 2 3 4 @BeforeClass public static void beforeClass() { System.setProperty(&amp;#34;spring.kafka.bootstrap-servers&amp;#34;, embeddedKafka.getBrokersAsString()); } 后两个配置不会覆盖第一个配置！！！ spring boot 官方文档</description>
    </item>
    
    <item>
      <title>Spring Boot 日志初始化</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/spring-boot-%E6%97%A5%E5%BF%97%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Sun, 03 May 2020 17:30:16 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/spring-boot-%E6%97%A5%E5%BF%97%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>spring boot官方参考文档有以下一段话 When possible, we recommend that you use the -spring variants for your logging configuration (for example, logback-spring.xml rather than logback.xml). If you use standard configuration locations, Spring cannot completely control log initialization. 为什么使用标准的日志配置文件名，sprin</description>
    </item>
    
    <item>
      <title>Idea Integrate Directory 和 Merge From 区别</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/idea-integrate-directory-%E5%92%8C-merge-from-%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sun, 03 May 2020 17:27:58 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/idea-integrate-directory-%E5%92%8C-merge-from-%E5%8C%BA%E5%88%AB/</guid>
      <description>官方文档 merge from: https://www.jetbrains.com/help/idea/integrating-changes-to-from-feature-branches.html integrate directory: https://www.jetbrains.com/help/idea/integrating-svn-projects-or-directories.html 区别应该和 TortoiseSVN -&amp;gt; merge 两个选项之间的区别一样 merge a range of revisions This method covers the case when you have made one or more revisions to a branch (or to the trunk) and you want to port those changes across to a different branch. merge two difference trees</description>
    </item>
    
    <item>
      <title>Spring Boot内嵌Servlet容器的根目录（document Root）</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/spring-boot%E5%86%85%E5%B5%8Cservlet%E5%AE%B9%E5%99%A8%E7%9A%84%E6%A0%B9%E7%9B%AE%E5%BD%95document-root/</link>
      <pubDate>Sun, 03 May 2020 17:26:07 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/spring-boot%E5%86%85%E5%B5%8Cservlet%E5%AE%B9%E5%99%A8%E7%9A%84%E6%A0%B9%E7%9B%AE%E5%BD%95document-root/</guid>
      <description>1 AbstractConfigurableEmbeddedServletContainer.getValidDocumentRoot 不是war部署的话，会遍历 &amp;ldquo;src/main/webapp&amp;rdquo;, &amp;ldquo;public&amp;rdquo;, &amp;ldquo;static&amp;rdquo;，有存在的目录即选中</description>
    </item>
    
    <item>
      <title>分页代码逻辑(js)</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%88%86%E9%A1%B5%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91js/</link>
      <pubDate>Sun, 03 May 2020 17:24:14 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/%E5%88%86%E9%A1%B5%E4%BB%A3%E7%A0%81%E9%80%BB%E8%BE%91js/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 var count = 4; var start = page.pageNum - parseInt(count / 2); var end = page.pageNum + Math.ceil(count / 2) - 1; if (page.pages &amp;lt;= count ) { start = 1; end = page.pages; } else if(start &amp;lt; 1) { start = 1; end = count; } else if (end &amp;gt; page.pages) { start = page.pages -</description>
    </item>
    
    <item>
      <title>Jenkins运行测试失败</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/jenkins%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Sun, 03 May 2020 17:21:09 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/jenkins%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95%E5%A4%B1%E8%B4%A5/</guid>
      <description>jenkins 会以如下的方式运行mvn： 1 mvn -f ../bomc-resource-api/pom.xml clean package 这样运行会导致测试中的 Classloader.getResource(&amp;quot;&amp;quot;) 返回null jpa 的 persistenceUnitRootLocation 默认为 &amp;ldquo;classpath:&amp;rdquo; , 会产生一个Classloader.getReso</description>
    </item>
    
    <item>
      <title>Maven运行命令导致Classloader.getResource返回空</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/maven%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%AF%BC%E8%87%B4classloader.getresource%E8%BF%94%E5%9B%9E%E7%A9%BA/</link>
      <pubDate>Sun, 03 May 2020 17:17:44 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/maven%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%AF%BC%E8%87%B4classloader.getresource%E8%BF%94%E5%9B%9E%E7%A9%BA/</guid>
      <description>mvn -f ../bomc-resource-api/pom.xml test 会导致执行测试的时候 Classloader.getResource(&amp;quot;&amp;quot;) 返回null</description>
    </item>
    
    <item>
      <title>java类路径查找顺序</title>
      <link>http://example.org/post/%E7%AC%94%E8%AE%B0/java%E7%B1%BB%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Sun, 03 May 2020 17:07:20 +0800</pubDate>
      
      <guid>http://example.org/post/%E7%AC%94%E8%AE%B0/java%E7%B1%BB%E8%B7%AF%E5%BE%84%E6%9F%A5%E6%89%BE%E9%A1%BA%E5%BA%8F/</guid>
      <description>URLClassLoader 是 AppClassLoader的父类。 URLClassLoader.getResourceAsStream 按 java.class.path 值的顺序查找类路径的资源，找到即返回</description>
    </item>
    
  </channel>
</rss>